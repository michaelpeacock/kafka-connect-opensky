//plugins {
//    id 'com.github.johnrengelman.shadow' version '2.0.4'
//}

plugins {
    id 'com.avast.gradle.docker-compose' version '0.9.1'
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'jacoco'
apply plugin: 'distribution'
//tasks.build.dependsOn tasks.shadowJar

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url "http://packages.confluent.io/maven/"
    }
}

dependencies {

    compile group: 'org.apache.commons', name: 'commons-text', version: commons_text_version

    compile group: 'com.google.collections', name: 'google-collections', version: '1.0'

    // compile group: 'org.apache.kafka', name: 'connect-runtime', version: kafka_version
    compileOnly group: 'org.apache.kafka', name: 'connect-api', version: kafka_version

    compile group: 'com.squareup.retrofit2', name: 'retrofit', version: retrofit2_version
    compile group: 'com.squareup.retrofit2', name: 'converter-jackson', version: retrofit2_version

    compileOnly group: 'org.projectlombok', name: 'lombok', version: lombok_version
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombok_version

    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: lombok_version
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombok_version

    testCompile group: 'junit', name: 'junit', version: junit_version
    testCompile group: 'org.spockframework', name: 'spock-core', version: spockframework_version

    testCompile group: 'org.apache.kafka', name: 'connect-api', version: kafka_version
}


//shadowJar() {
//    destinationDir = file("$rootDir/build/connect")
//    dependencies {
//        // exclude dependencies provided in the kafka connect classpath
//        exclude dependency("org.apache.kafka:connect-api:$kafka_version")
//        exclude dependency("org.apache.kafka:kafka-clients:$kafka_version")
//        exclude dependency('net.jpountz.lz4:.*:.*')
//        exclude dependency('org.xerial.snappy:.*:.*')
//        exclude dependency('org.slf4j:.*:.*')
//    }
//}

idea {
    module {
        inheritOutputDirs = false
        outputDir = compileJava.destinationDir
        testOutputDir = compileTestJava.destinationDir
    }
}

jacoco {
    toolVersion = "0.8.2"
}

jacocoTestReport {
    reports {
        xml.enabled = false
        csv.enabled = false
        html.destination file("${buildDir}/reports/jacoco/html")
    }
}

distributions {

    main {
        baseName = "nbuesing-${project.name}"
        contents {
            from("docs/manifest.json")
            into("doc/") {
                from(project.projectDir) {
                    include("LICENSE*")
                    include("README*")
                    include("NOTICE*")
                    include("license/*")
                }
                from("${project.projectDir}/docs") {
                    include("*.png")
                }
            }
            into("etc/") {
                from("config")
            }
            into("assets/") {
            }
            into("lib/") {
                from(jar)
                from(configurations.runtimeClasspath)
            }
        }
    }
}

tasks {
    composeUp {
        dependsOn(distZip)
    }
}

dockerCompose {
    useComposeFiles = [ "docker-compose.yml" ]
}